# -*- coding: utf-8 -*-
"""Training_yolov5s.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ThDBYmDX-Hw2uGf293lhK0zp2Q_NP1Or

#training with yolov5
"""

#import useful libraries
import os
from random import choice
import shutil
import glob as glob
from IPython.display import Image

"""#prepare data"""

#arrays to store file names
imgs =[]
xmls =[]
source_path = "/content/drive/MyDrive/data/modified_yolo_drinking_water_classification"
# #soring files to corresponding arrays
for (dirname, dirs, files) in os.walk(source_path):
    for filename in files:
        if filename.endswith('.txt'):
            xmls.append(filename)
        else:
            imgs.append(filename)


#setup ratio (val ratio = rest of the files in origin dir after splitting into train and test)
train_ratio = 0.8
val_ratio = 0.2

#counting range for cycles
count_train = int(len(imgs)*train_ratio)
count_val = int(len(imgs)*val_ratio)
print("training images are : ",count_train)
print("Validation images are : ",count_val)

#setup dir names
train_img_path = '/content/drive/MyDrive/dataCompareTwoModels/images/train'
val_img_path = '/content/drive/MyDrive/dataCompareTwoModels/images/val'
source_path = '/content/drive/MyDrive/data/modified_yolo_drinking_water_classification' #dir where images and annotations stored

train_label_path = '/content/drive/MyDrive/dataCompareTwoModels/labels/train'
val_label_path = '/content/drive/MyDrive/dataCompareTwoModels/labels/val'

#cycle for train dir
for x in range(count_train):

    file_jpg = choice(imgs) # get name of random image from origin dir
    file_xml = file_jpg[:-4] +'.txt' # get name of corresponding annotation file

    shutil.copy(os.path.join(source_path, file_jpg), os.path.join(train_img_path, file_jpg))
    shutil.copy(os.path.join(source_path, file_xml), os.path.join(train_label_path, file_xml))

    #remove files from arrays
    imgs.remove(file_jpg)
    xmls.remove(file_xml)

#cycle for val dir   
for x in range(count_val):

    file_jpg = choice(imgs) # get name of random image from origin dir
    file_xml = file_jpg[:-4] +'.txt' # get name of corresponding annotation file

    shutil.copy(os.path.join(source_path, file_jpg), os.path.join(val_img_path, file_jpg))
    shutil.copy(os.path.join(source_path, file_xml), os.path.join(val_label_path, file_xml))
    
    #remove files from arrays
    imgs.remove(file_jpg)
    xmls.remove(file_xml)

"""#Add background img"""

#add background images
back_ground = '/content/drive/MyDrive/dataCompareTwoModels/background'

bg_name = []
for root, dir, files in os.walk(back_ground):
  for filename in files:
    bg_name.append(filename)
    shutil.copy(os.path.join(back_ground, filename), os.path.join(train_img_path, filename))

"""#transfered data"""

#setup dir names
train_img_path = '/content/drive/MyDrive/dataCompareTwoModels/images/train'
val_img_path = '/content/drive/MyDrive/dataCompareTwoModels/images/val'
source_path = '/content/drive/MyDrive/data/modified_yolo_drinking_water_classification' #dir where images and annotations stored

train_label_path = '/content/drive/MyDrive/dataCompareTwoModels/labels/train'
val_label_path = '/content/drive/MyDrive/dataCompareTwoModels/labels/val'

"""#Training Process"""

#useful libraries to strat training process
import torch
from IPython.display import Image
!pip install -U albumentations==1.0.3

# Commented out IPython magic to ensure Python compatibility.
#clone yolov5 repository
!git clone https://github.com/ultralytics/yolov5
# %cd yolov5

# Preparing yaml file
import yaml
config = {'path': '/content/drive/MyDrive/dataCompareTwoModels',
         'train': '/content/drive/MyDrive/dataCompareTwoModels/images/train',
         'val': '/content/drive/MyDrive/dataCompareTwoModels/images/val',
         'nc': 4,
         'names': ['AluCan', 'Glass', 'HDPE', 'PET']}
 
with open("train-test.yaml", "w") as file:
   yaml.dump(config, file, default_flow_style=False)

#training
!python train.py --img 640 --batch 32 --epochs 52 --data train-test.yaml --weights yolov5s.pt --project '/content/drive/MyDrive/dataCompareTwoModels' --name 'result' --cache --save-period 20

"""#Display result"""

# Commented out IPython magic to ensure Python compatibility.
#show reult visually
!pip install tensorboard==2.4.1
# %load_ext tensorboard
# %tensorboard --logdir /content/drive/MyDrive/result

Image(filename='/content/drive/MyDrive/1.PET.jpeg', width=1000)